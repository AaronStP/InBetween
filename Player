using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.UI;

public class Player : PhysicsObject
{
    //Fields and Variables
    [Header("Player Stats")]
    [SerializeField] float maxSpeed = 1f;
    [SerializeField] float jumpPower = 10f;
    [SerializeField] public int health;

    int maxHealth = 100;

    [Header("Misc Elements")]
    public Sprite keySprite;
    public Sprite blankInventory;
    public Text coinText;
    public Image healthBar;
    public int coinsCollected;

    public Dictionary<string, Sprite> inventory = new Dictionary<string, Sprite>();
    public Image inventoryItemImage;
    Vector2 healthBarOriginalSize;

    // Start is called before the first frame update
    void Start()
    {
        healthBarOriginalSize = healthBar.rectTransform.sizeDelta;
        UpdateUIElements();
    }

    // Update is called once per frame
    void Update()
    {
        //Player Movement
        targetVelocity = new Vector2(Input.GetAxis("Horizontal") * maxSpeed, 0);
        if (Input.GetButtonDown("Jump") && grounded) //Grounded from Parent class
        {
            velocity.y = jumpPower;
        }
    }

    //Update UI when collectable is obtained
    public void UpdateUIElements()
    {
        coinText.text = coinsCollected.ToString();
        healthBar.rectTransform.sizeDelta = new Vector2(healthBarOriginalSize.x * ((float)health / (float)maxHealth), healthBar.rectTransform.sizeDelta.y);
    }

    //Inventory Adding System
    public void AddInventoryItem(string itemName, Sprite itemImage)
    {
        inventory.Add(itemName, itemImage);
        inventoryItemImage.sprite = inventory[itemName];
    }

    //Inventory Removal System
    public void RemoveInventoryItem(string itemName)
    {
        inventory.Remove(itemName);
        inventoryItemImage.sprite = blankInventory;
    }
}
